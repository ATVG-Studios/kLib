/*
 * This file belongs to the source code of: kLib
 *
 * Copyright© 2015-2021 Thomas Obernosterer, ATVG-Studios
 * Copyright© 2019-2021 all kLib Contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version "$shadow_version"
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.dokka' version "$dokka_version"
    id "org.jmailen.kotlinter" version "$kotlinter_version"
    id "io.gitlab.arturbosch.detekt" version "$detekt_version"
    id 'maven-publish'
    id 'signing'
}

group 'klib'
version "$klib_version"

repositories {
    mavenCentral()
    // DEPRECATED: jCenter will go offline on 1st February 2022
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    dokkaHtmlPlugin "org.jetbrains.dokka:kotlin-as-java-plugin:$dokka_version"

    implementation "net.jemzart:jsonkraken:$jsonkraken_version"
    implementation "joda-time:joda-time:$jodatime_version"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
}

tasks.detekt.jvmTarget = "1.8"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

wrapper {
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradle_version}-all.zip"
}

detekt {
    failFast = false // disable fast failing so it continues till the end
    ignoreFailures = true // ignore all failures, just do the scan and dont break the build
    buildUponDefaultConfig = true // use default configuration

    // Enable HTML and TEXT outputs; Disable XML
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = true
    }
}

jar {
    manifest {
        attributes 'Specification-Title': "kLib"
        attributes 'Specification-Version': "20"
        attributes 'Specification-Vendor': "ATVG-Studios"
        attributes 'Implementation-Title': "kLib"
        attributes 'Implementation-Version': "$klib_version"
        attributes 'Implementation-Vendor': "ATVG-Studios"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn", "-Xuse-experimental=kotlin.Experimental"]
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def buildEnvironment = System.getenv("BUILD_ENVIRONMENT")
def buildEnvGitlab = "Gitlab-CI"

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenKotlin(MavenPublication) {
            groupId = 'com.atvgstudios'
            artifactId = 'klib'
            version = "$klib_version"
            from components.java
            pom {
                name = 'kLib'
                description = 'kLib is a Generic Kotlin Library to simplify development'
                url = 'https://klib.atvg-studios.com'
                licenses {
                    license {
                        name = 'OSPL20'
                        url = 'https://gitlab.atvg-studios.com/atvg-studios/kLib/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'atjontv'
                        name = 'Thomas Obernosterer'
                        email = 'thomas.obernosterer@atvg-studios.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://gitlab.atvg-studios.com/atvg-studios/kLib.git'
                    developerConnection = 'scm:git:ssh://gitlab.atvg-studios.com/atvg-studios/kLib.git'
                    url = 'https://gitlab.atvg-studios.com/atvg-studios/kLib.git'
                }
            }
        }
    }
    repositories {
        if(buildEnvironment == buildEnvGitlab) {
            maven {
                url "https://gitlab.atvg-studios.com/api/v4/projects/123/packages/maven"
                credentials(HttpHeaderCredentials) {
                    name = 'Job-Token'
                    value = System.getenv("CI_JOB_TOKEN")
                }
                authentication {
                    header HttpHeaderAuthentication
                }
            }
        } else {
            maven {
                def releaseUrl = '/data/atjontv/git/maven-repo'
                def snapshotUrl = '/data/atjontv/git/maven-repo/snapshots'
                url = (version.contains('dev') || version.contains('rc')) ? snapshotUrl : releaseUrl
            }
        }
    }
}

if(buildEnvironment != buildEnvGitlab) {
    signing {
        useGpgCmd()
        sign publishing.publications.mavenKotlin
    }
}
